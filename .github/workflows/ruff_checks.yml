# File: .github/workflows/ruff_checks.yml

name: Code Quality Checks # Workflow name displayed on GitHub Actions tab

# Controls when the workflow will run
on:
  push:
    branches: [ master ] # Trigger workflow on pushes to the master branch
  pull_request:
    branches: [ master ] # Trigger workflow on pull requests targeting the master branch

# Sets default permissions for the GITHUB_TOKEN to allow read access for checkout
permissions:
  contents: read

jobs:
  ruff_quality_checks: # Job identifier
    name: Run Ruff Linter & Formatter # Job name displayed on GitHub Actions UI
    runs-on: ubuntu-latest # Specifies the runner environment

    steps:
      # Step 1: Check out the repository code
      - name: Check out repository
        uses: actions/checkout@v4 # Checks-out repository under $GITHUB_WORKSPACE, so the job can access it

      # Step 2: Set up the specified Python environment
      - name: Set up Python
        uses: actions/setup-python@v5 # Configures the Python environment for the runner
        with:
          # Specify the Python version matching your project requirements
          python-version: '3.11'
          # Optional: Cache pip dependencies to speed up subsequent runs
          cache: 'pip'

      # Step 3: Install required Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install dependencies listed in requirements-dev.txt, which includes Ruff
          pip install -r requirements-dev.txt

      # Step 4: Run Ruff linter to identify code issues
      - name: Run Ruff Linter Check
        run: ruff check . # Executes Ruff's linter; non-zero exit code on finding issues fails the job

      # Step 5: Run Ruff formatter to verify code style compliance
      - name: Run Ruff Formatter Check
        run: ruff format --check . # Executes Ruff's formatter in read-only mode (--check); non-zero exit code on finding format violations fails the job